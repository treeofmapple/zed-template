package com.tom.front.basic.repository;

import java.util.Optional;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.stereotype.Repository;

import com.tom.front.basic.model.Book;

@Repository
public interface BookRepository extends JpaRepository<Book, Long>{

	@Query()
	Optional<Book> findByIsbn(String isbn);

	@Query()
	Optional<Book> findByTitle(String title);
	
	@Query()
	boolean existsByIsbn(String isbn);
	
	@Query()
	boolean existsByTitle(String title);
	
	@Query()
	Page<Book> findByTitleContainingIngoreCase(String title, Pageable pageable);
	
	Page<Book> findByAuthorContainingIgnoreCase(String author, Pageable pageable);
	// find by title Page
	
	// find by author Page
	
	// find by published date PAGE
	
	
}
