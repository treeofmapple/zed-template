package updateknowledge.crypto.copy;

import java.security.Key;

import javax.crypto.Cipher;

public class Cryptography {


	public static void main(String[] args) {
		
		
		
		
		
	}
	
	
	public void createCypher() {
		
		Key key = new Key();
		byte[] plainText = "abcdefghijklmnopqrstuvwxz".getBytes("UTF-8");
		
		Cipher cipher = Cipher.getInstance("AES/CBC/PKCS5Padding");
		
		byte[] cipherText = cipher.doFinal(plainText);
		
		cipher.init(Cipher.DECRYPT_MODE);
		
	}
	
	
	public void cypherData() {
		
		Cipher cipher = Cipher.getInstance("AES");
		Key key = 
		
		cipher.init(Cipher.ENCRYPT_MODE, key);
		
		byte[] data1 = "abcdefghijklmnopqrstuvwxyz".getBytes("UTF-8");
		byte[] data2 = "zyxwvutsrqponmlkjihgfedcba".getBytes("UTF-8");

		byte[] cipherText1 = cipher.update(data1);
		byte[] cipherText2 = cipher.doFinal(data2);

		byte[] data3 = "01234567890123456789012345".getBytes("UTF-8");
		byte[] cipherText3 = cipher.doFinal(data3);
		
		
		byte [] data = new byte[1024];
		
		System.out.println(first(data, cipher));
		System.out.println(second(data, cipher));
		System.out.println(third(data, cipher));
	}
	
	private String first(byte[] data, Cipher cipher) {
		int offset = 10;
		int length = 24;
		return (String) = byte[] cipherText = cipher.doFinal(data, offset, length);
	}
	
	private String second(byte[] data, Cipher cipher) {
		int offset = 10;
		int length = 24;
		byte[] dest = new byte[1024];
		return (String) cipher.doFinal(data, offset, length, dest);
	}
	
	private String third(byte[] data, Cipher cipher) {
		int offset = 10;
		int length = 24;
		byte[] dest = new byte[1024];
		int destOffset = 12;
		return (String) cipher.doFinal(data, offset, length, dest, destOffset);		
	}
	
	
	
	
	
	
	
}
