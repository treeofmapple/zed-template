package com.tom.front.basic.repository;

import java.time.LocalDate;
import java.util.Optional;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.stereotype.Repository;

import com.tom.front.basic.model.Book;

@Repository
public interface BookRepository extends JpaRepository<Book, Long>{

	Optional<Book> findByIsbn(String isbn);

	Optional<Book> findByTitle(String title);
	
	boolean existsByIsbn(String isbn);
	
	boolean existsByTitle(String title);
	
	Page<Book> findByTitleContainingIgnoreCase(String title, Pageable pageable);
	
	Page<Book> findByAuthorContainingIgnoreCase(String author, Pageable pageable);

	Page<Book> findByPublishedDate(LocalDate publishedDate, Pageable pageable);

    @Query(value = "SELECT * FROM book WHERE to_tsvector('english', title) @@ to_tsquery('english', :searchTerm)",
            countQuery = "SELECT count(*) FROM book WHERE to_tsvector('english', title) @@ to_tsquery('english', :searchTerm)",
            nativeQuery = true)
     Page<Book> searchByTitleFullText(String title, Pageable pageable);

	
}
