package com.tom.front.authbasic.config;

import java.io.IOException;
import java.time.Duration;
import java.util.Map;
import java.util.concurrent.ConcurrentHashMap;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.web.filter.OncePerRequestFilter;

import io.github.bucket4j.Bandwidth;
import io.github.bucket4j.Bucket;
import jakarta.servlet.FilterChain;
import jakarta.servlet.ServletException;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;

@Configuration
public class RateLimitFilter extends OncePerRequestFilter {

	@Value("${application.rate.limit:20}")
	private int rateLimit;
	
    private final Map<String, Bucket> buckets = new ConcurrentHashMap<>();

    @Bean
    Bucket createNewBucket() {
    	Bandwidth limit = Bandwidth.builder()
    			.capacity(rateLimit)
    			.refillGreedy(10, Duration.ofMinutes(rateLimit))
    			.refillIntervally(rateLimit, Duration.ofMinutes(1))
    			.build();
    	
        return Bucket.builder()
                .addLimit(limit)
                .build();
    }
    
	@Override
	protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain)
			throws ServletException, IOException {
		
	}
	
}
