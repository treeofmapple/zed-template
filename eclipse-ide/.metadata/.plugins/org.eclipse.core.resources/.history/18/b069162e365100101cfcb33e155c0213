package com.tom.front.basic.config;

import java.io.IOException;
import java.time.Duration;
import java.util.Map;
import java.util.concurrent.ConcurrentHashMap;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.lang.NonNull;
import org.springframework.web.filter.OncePerRequestFilter;

import com.tom.front.basic.common.SystemUtils;

import io.github.bucket4j.Bandwidth;
import io.github.bucket4j.Bucket;
import jakarta.servlet.FilterChain;
import jakarta.servlet.ServletException;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import lombok.RequiredArgsConstructor;

@Configuration
@RequiredArgsConstructor
public class RateLimitFilter extends OncePerRequestFilter {

	@Value("${application.rate.limit:10}")
	private int rateLimit;
	
	@Value("${application.rate.refil.time:30S}")
	private String timeLimit;

	private final SystemUtils utils;
	
    private final Map<String, Bucket> buckets = new ConcurrentHashMap<>();

    @Bean
    Bucket createNewBucket() {
    	Bandwidth limit = Bandwidth.builder()
    			.capacity(rateLimit)
    			.refillGreedy(rateLimit, Duration.ofSeconds(utils.parseDurationReduced(timeLimit)))
    			.build();
    	
        return Bucket.builder()
                .addLimit(limit)
                .build();
    }
    
    @Override
    protected void doFilterInternal(@NonNull HttpServletRequest request,
    								@NonNull HttpServletResponse response,
									@NonNull FilterChain filterChain)
            throws ServletException, IOException {

        String ip = request.getRemoteAddr();
        Bucket bucket = buckets.computeIfAbsent(ip, k -> createNewBucket());

        if (bucket.tryConsume(1)) {
            filterChain.doFilter(request, response);
        } else {
        	response.setContentType("text/plain");
            response.setStatus(429);
            response.getWriter().write("Too many requests - try again later.");
        }
    }
    
}
