package com.tom.front.basic.dto;

import java.math.BigDecimal;
import java.time.LocalDate;

import jakarta.validation.constraints.DecimalMin;
import jakarta.validation.constraints.Digits;
import jakarta.validation.constraints.Min;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.PastOrPresent;

public record BookRequest(
		
		@NotNull(message = "")
		@NotBlank(message = "")
		String title,
		
		@NotNull(message = "")
		@NotBlank(message = "")
		String author,
		
        @DecimalMin(value = "0.0", inclusive = true, message = "Price must be zero or greater.")
        @Digits(integer = 8, fraction = 2, message = "Price can have up to 8 integer digits and 2 fractional digits.")
		BigDecimal price,
		
		@PastOrPresent(message = "Published date cannot be in the future.")
		LocalDate publishedDate,
		
        @NotNull(message = "Stock quantity cannot be null.")
        @Min(value = 0, message = "Stock quantity must be zero or greater.")
		Integer stockQuantity
		
		) {

}

