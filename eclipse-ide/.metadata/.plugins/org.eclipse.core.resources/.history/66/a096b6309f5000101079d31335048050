package updateknowledge.generic_methods;

import java.util.ArrayList;
import java.util.List;

import updateknowledge.generic_methods.util.A;
import updateknowledge.generic_methods.util.B;

public class GenericWildcards {

	static List<A> listA = new ArrayList<>();
	static List<B> listB = new ArrayList<>();
	static List<?> listUnknown1 = new ArrayList<>();
	static List<? extends A> listUnknown2 = new ArrayList<>();
	static List<? super A> listUnknown3 = new ArrayList<>();

	public static void main(String[] args) {
		
		listA.add(new A());
		listA.add(new B());
		listB.add(new B());
		
		GenericWildCards demo = new GenericWildCards();
		
		processElements(listA);
	}

	public void processElements(List<A> elements) {
		for (A o : elements) {
			System.out.println(o);
		}
	}
	
	public void processElementsObject(List<?> elements) {
		for (Object o : elements) {
			System.out.println(o);
		}
	}
	
	public void processElementsExtends(List<? extends A> elements) {
		for (A o : elements) {
			System.out.println(o);
		}
	}
}
